
Time Stamp: 22nd Aug 2K24 - 01:02 PM..!!

Title: Change Log for Commit History

Category: Development -> Commit History -> Change Log

Keywords: Change Log, Commit History, Updates, Refactoring, Changes

Purpose: To maintain a detailed change log for the commit history of the project, including updates, refactoring, and other changes.

Dev: K.O.H..!! (Harshit Gupta)

GitHub: https://github.com/KOHTheCodeMaster/Frontend-Web-Dev/

----------------------------------------------------------------------------------------------------

Change Log:
-----------

----------------------------------------------------------------------------------------------------

Time Stamp:         5th May 2K25 - 09:35 PM
Commit Message:     311 - G-Mart - Angular - Added Address Service to Manage Address List

Quick Summary:

1. Added Address Service.
    - Created a new service to manage address-related operations.
    - Implemented methods to initialize address list.
    - Track the state of is edit address dialog open or closed.

----------------------------------------------------------------------------------------------------

Time Stamp:         5th May 2K25 - 07:25 PM
Commit Message:     310 - G-Mart - Angular - Edit Address Dialog - Closed when clicked outside

Quick Summary:

1. Added Edit-Address-Dialog Component
    - Created a new component for editing addresses.
    - Dialog will close when clicked outside of it.

----------------------------------------------------------------------------------------------------

Time Stamp:         29th Apr 2K25 - 09:51 AM
Commit Message:     309 - G-Mart - Angular - My Account Popup - Removed on Outside Click

Quick Summary:

1. Updated My Account Popup to be removed when clicked outside of it.

----------------------------------------------------------------------------------------------------

Time Stamp:         27th Apr 2K25 - 11:51 PM
Commit Message:     308 - G-Mart - Angular - Added Address Model along with Edit & Delete Popup Functionality

Quick Summary:

1. Added Address Model.
    - Created a new model to represent the address details for the user.

2. Added Edit & Delete Popup Functionality.
    - Implemented the functionality to edit and delete addresses from the saved addresses list.
    - Created a popup dialog for confirming the deletion of an address.
    - Popup disappearing behavior for the delete confirmation dialog is as follows:
        - It will be closed when clicked on cancel button or outside the popup, but not when clicked inside the popup.

----------------------------------------------------------------------------------------------------

Time Stamp:         26th Apr 2K25 - 10:29 PM
Commit Message:     307 - G-Mart - Angular - Components Added for My Account, Orders, Addresses

Quick Summary:

1. Added My Account Component.
    - Implemented the My Account component to display popup for my orders & saved addresses dialog.

2. Added Orders & Addresses Components.
    - Created Orders & Addresses component to display the list of orders as well as saved addresses.
    - Empty Skeleton design is implemented for both components.

----------------------------------------------------------------------------------------------------

Time Stamp:         25th Apr 2K25 - 04:46 PM
Commit Message:     306 - G-Mart - Angular - Added Tip Functionality to Shopping Cart Component

Quick Summary:

1. Added Tip Functionality to Shopping Cart Component.
    - Implemented a tip input field in the Shopping Cart component.
    - Added functionality to apply a tip value to the total price in the cart.
    - Created a method to check if a tip is applied and update the total price accordingly.

----------------------------------------------------------------------------------------------------

Time Stamp:         25th Apr 2K25 - 12:48 AM
Commit Message:     305 - G-Mart - Angular - Big Commit - Added Multiple Charges Model & Service - More Refactoring

Quick Summary:

1. Added Multiple Charges Model & Service.
    - Created a new model to represent different charges (Delivery, Handling, Small Cart, High Demand Surge).
    - Implemented a service to ensure a single instance of the charges model is used across the application.

2. Refactored Shopping Cart Component to use the new Charges Model.
    - Updated the Shopping Cart component to use the new Charges model for displaying charges.
    - Ensured that the subtotal, total, and other calculations are done using the new model.

3. Added MRP & Discount to Product Model.
    - Updated the Product model to include MRP (Maximum Retail Price) and Discount fields.
    - Discount field is hardcoded to 10% of the MRP price for now.
    - These fields will be used to display the MRP and Discount information on the shopping cart component.

4. Added 'isFeedingIndiaChecked' field and Toggle Feed India Donation Checkbox.
    - Implemented a toggle functionality for the Feed India Donation checkbox.
    - When checked, it will add a donation amount to the total price in the shopping cart.

5. Close Shopping Cart when no items are present after decreasing quantity.
    - Implemented a functionality to close the shopping cart when there are no items present in the cart.

----------------------------------------------------------------------------------------------------

Time Stamp:         23rd Apr 2K25 - 01:08 PM
Commit Message:     304 - G-Mart - Angular - Added Scrollbar to Shopping Cart & Fixed Backdrop Issue in Info Popup

Quick Summary:

1. Added Scrollbar to Shopping Cart Component.
    - Implemented using `flex-1 overflow-y-auto` classes for the cart items container.
    - Scrollbar will appear when the cart items exceed the visible area.

2. Fixed backdrop issue in Info Popup Component.
    - Ensured that the backdrop is displayed correctly when the Info Popup is open.
    - It will close the popup when clicked outside of it but not when clicked inside of the popup itself.

----------------------------------------------------------------------------------------------------

Time Stamp:         22nd Apr 2K25 - 01:49 PM
Commit Message:     303 - G-Mart - Angular - Refactor Info Popup Component & Added 'FEED_INDIA' Type

Quick Summary:

1. Refactored Info Popup Component to improve code structure and readability.
    - Updated the component to use 'infoPopupType' variable instead of observable.
    - Initialized it with 'NONE' type to set the default state.

2. Added 'FEED_INDIA' type to the Info Popup Type.
    - This type will be used to display information related to the 'Feed India' initiative.

3. Updated svg icons for subtotal dropdown open/close states as well as Proceed To Pay button.

----------------------------------------------------------------------------------------------------

Time Stamp:         22nd Apr 2K25 - 12:11 AM
Commit Message:     302 - G-Mart - Angular - Add Info Popup Service and Component

Quick Summary:

1. Added Info Popup Service to manage the display of information popups in the application.
    - The service provides methods to show and hide popups with different popups messages.
    - List of Popups: Delivery Charge, Handling Charge, Small Cart Charge, High Demand Surge Charge

2. Added Info Popup Component to display information messages.
    - The component is designed to be reusable as a modal popup and can be directly used in any component.

----------------------------------------------------------------------------------------------------

Time Stamp:         14h Apr 2K25 - 10:31 PM
Commit Message:     301 - G-Mart - Angular - Refactored Shopping Cart Component and Added Backdrop

Quick Summary:

1. Refactored the Shopping Cart component to improve structure and styling.
    - Improved the structure of the Shopping Cart component for better readability and maintainability.
    - Updated the styling of the Shopping Cart component to match the overall design of the application.

2. Added Backdrop to the Shopping Cart component.
    - Implemented a backdrop that appears when the Shopping Cart is open, providing a better user experience.
    - The backdrop closes the Shopping Cart when clicked outside of it.

----------------------------------------------------------------------------------------------------

Time Stamp:         14h Apr 2K25 - 08:47 PM
Commit Message:     300 - G-Mart - Angular - Added Shopping Cart Component to Navbar, Refactored Shopping Cart Logic

Quick Summary:

1. Added Shopping Cart Component to the Navbar.
    - The Shopping Cart component now displays the total item count and total price of items in the cart.
    - The Navbar component has been updated to include the Shopping Cart icon and item count.
    - It has a Right Panel that opens when the cart icon is clicked, displaying the cart items and total price.

2. Refactored the Shopping Cart logic to update the cart visibility.
    - The Shopping Cart component now uses a service to manage the cart state and visibility.
    - The cart visibility is toggled when the cart icon is clicked.

----------------------------------------------------------------------------------------------------

Time Stamp:         8th Apr 2K25 - 12:36 PM
Commit Message:     299 - G-Mart - Angular - Refactored Shopping Cart & Added it to Navbar Component

Quick Summary:

1. Refactored the Shopping Cart logic to sync total price and item count.
    - Refactored the 'totalQty' to 'itemCount' for better clarity.
    - Optimized the methods for adding, removing, and updating items in the cart.
    - Ensured that the cart updates correctly when items are added or removed.

2. Added Shopping Cart to the Navbar component.
    - The Navbar now displays the total item count and total price of items in the cart.

----------------------------------------------------------------------------------------------------

Time Stamp:         7th Apr 2K25 - 11:28 PM
Commit Message:     298 - G-Mart - Angular - Implemented Shopping Cart Functionality, Refactored Product Card Component

Quick Summary:

1. Implemented `CartItem` and `ShoppingCart` models to manage the shopping cart functionality.
   - The `CartItem` model represents an item in the cart, including product details, quantity & subtotal price.
   - The `ShoppingCart` model manages the list of items in the cart and provides methods for adding, removing, and updating items.

2. Refactored the 'ProductGridCard' component to 'ProductCard' component as they are now the same.
   - The Product Card component now uses the `CartItem` model to display product details and allows users to add items to the cart.
   - Removed 'ProductSliderCardComponent' as it was redundant and not needed anymore.

----------------------------------------------------------------------------------------------------

Time Stamp:         7th Apr 2K25 - 09:56 PM
Commit Message:     297 - G-Mart - Added ProductUnitLabel Entity, Refactored Product Model & DB Table Schema

Quick Summary:

1. Added `ProductUnitLabel` entity to represent the unit of measurement for products.
   - This entity will help in better representation of product units in the application.

2. Refactored the Product model to include the `ProductUnitLabel` entity along with the `ProductUnitValue` field.
   - This change will allow for better handling of product units in the application.

3. Changed `PRODUCT` DB Table Schema to include `ProductUnitLabel` and `ProductUnitValue` fields.
   - This change will ensure that the database schema is consistent with the updated Product model.

----------------------------------------------------------------------------------------------------

Time Stamp:         6th Apr 2K25 - 12:43 PM
Commit Message:     296 - G-Mart - Refactored Models to include objects instead of ids

Quick Summary:

1. Refactored models to include objects instead of ids for categories, subcategories, and products.
   - Updated the models to use objects for better data representation and manipulation.
   - Ensured that the models are consistent with the database schema.

2. Updated the services to handle the new model structure.
    - Refactored the services to work with the new model structure.

3. Commented out the quantity and subTotalPrice fields in the Product model.
    - These fields will be added later when the cart functionality is implemented.

----------------------------------------------------------------------------------------------------

Time Stamp:         2nd Apr 2K25 - 07:45 PM
Commit Message:     295 - Angular Projects - G-Mart - Refactored JSON Keys for Loading Data

Quick Summary:

1. Refactored JSON keys for categories, subcategories, and products to match the database schema.
   - Updated JSON files to ensure consistency with the database structure.
   - "products" -> "product"; "categories" -> "category"; "subcategories" -> "subcategory"; "users" -> "user".

----------------------------------------------------------------------------------------------------

Time Stamp:         2nd Apr 2K25 - 06:36 PM
Commit Message:     294 - Java Projects - G-Mart - Add SQL scripts for category, subcategory, and product

Quick Summary:

1. Added SQL scripts to create tables for categories, subcategories, and products in the SQLite database.

----------------------------------------------------------------------------------------------------

Time Stamp:         1st Apr 2K25 - 09:36 PM
Commit Message:     293 - Java Projects - G-Mart - Added Logger - logback SLF4J Configuration

Quick Summary:

1. Added Logger to the G-Mart project using SLF4J and logback.
2. Configured logback for logging in the application.
3. Updated the logging configuration file to set the logging level and appenders.
4. Rolling file appender is used to log messages to a file.

----------------------------------------------------------------------------------------------------

Time Stamp:         31st Mar 2K25 - 01:44 PM
Commit Message:     292 - Angular Projects - Refactored 'Blinkit' to 'G-Mart' Project

Quick Summary:

1. Refactored the 'Blinkit' project to 'G-Mart' for better alignment with the project name.
2. Updated all references to 'Blinkit' in the codebase to 'G-Mart'.

----------------------------------------------------------------------------------------------------

Time Stamp:         31st Mar 2K25 - 01:33 PM
Commit Message:     291 - Java Projects - G-Mart - Project Setup - CRUD Operations for Categories

Quick Summary:

1. Project Setup for G-Mart - A Grocery Shopping Application (Blinkit Clone).
2. Implemented CRUD operations for Categories.
3. Configured SQLite database for storing data.

----------------------------------------------------------------------------------------------------

Time Stamp:         29th Mar 2K25 - 11:49 PM
Commit Message:     290 - Angular Projects - Blinkit - Added Left & Right Scroll Buttons to Product Slider Component

Quick Summary:

1. Added Left & Right Scroll Buttons to the Product Slider Component.
2. Implemented functionality to scroll the product slider left and right using the buttons.

----------------------------------------------------------------------------------------------------

Time Stamp:         29th Mar 2K25 - 11:00 PM
Commit Message:     289 - Angular Projects - Blinkit - Added Product Slider Card Component & Fixed Category List

Quick Summary:

1. Fixed the Category List in the Product Slider Component to display the correct categories.
2. Added Product Slider Card Component to display the product slider cards. (Design is pending)

----------------------------------------------------------------------------------------------------

Time Stamp:         19th Mar 2K25 -
Commit Message:     288 - Angular Projects - Blinkit - Added `unitLabel` to Product Card Component

Quick Summary:

1. Added `unitLabel` field to the Product model to display the unit of the product.

----------------------------------------------------------------------------------------------------

Time Stamp:         19th Mar 2K25 - 08:49 AM
Commit Message:     287 - Angular Projects - Blinkit - Sort Functionality in Shopping Component

Quick Summary:

1. Added Sort Functionality to the Product List in the Shopping Component.
    - Users can now sort products by Featured (Default), Price (Low-High), Price (High-Low), and Name (A-Z).

----------------------------------------------------------------------------------------------------

Time Stamp:         19th Mar 2K25 - 08:23 AM
Commit Message:     286 - AI Tools - Prompt - Added New Prompt for Full Stack Expert Role

Quick Summary:

1. Added a new prompt for the Expert Full-Stack Technical Assistant (Java + Angular) role.

----------------------------------------------------------------------------------------------------

Time Stamp:         18th Mar 2K25 - 09:50 AM
Commit Message:     285 - Angular Projects - Blinkit - Fixed Useful Links & Categories Component - Cosmetic Changes in Category List Bar & Shopping Component

Quick Summary:

1. Fix `UsefulLinksAndCategoriesComponent` to display the correct category list and make it interactive.

2. Fixed the Category List Bar Component to highlight the active category.

3. Updated the width of "Top 10 Products Price List" Section in the Shopping Component.

----------------------------------------------------------------------------------------------------

Time Stamp:         18th Mar 2K25 - 09:09 AM
Commit Message:     284 - Angular Projects - Blinkit - Re-designed All Components for Dark Mode

Quick Summary:

1. Re-designed all components for Dark Mode.

----------------------------------------------------------------------------------------------------

Time Stamp:         18th Mar 2K25 - 08:42 AM
Commit Message:     283 - Angular Projects - Blinkit - Fixed Sub Category Description & Top 10 Products Price List Sections

Quick Summary:

1. Fixed the Sub Category Description & Top 10 Products Price List Sections to use the correct subcategory.

----------------------------------------------------------------------------------------------------

Time Stamp:         18th Mar 2K25 - 07:07 AM
Commit Message:     282 - Angular Projects - Blinkit - Updated Shopping Component

Quick Summary:

1. Added Product Category Description & Top 10 Products Price List Section.
2. Added Footer to Shopping Component.

----------------------------------------------------------------------------------------------------

Time Stamp:         13th Jan 2K25 - 11:37 PM
Commit Message:     281 - Angular Projects - Blinkit - Updated CategoryListBarComponent

Quick Summary:

1. Updated CategoryListBarComponent to display all 7 categories.

----------------------------------------------------------------------------------------------------

Time Stamp:         13th Jan 2K25 - 10:58 PM
Commit Message:     280 - Angular Projects - Blinkit - Added `DataLoaderService` & JSON Files for Categories, Subcategories & Products Data

Quick Summary:

1. Added JSON files for Categories, Subcategories, and Products data.
2. Added `DataLoaderService` to fetch data from JSON files.

----------------------------------------------------------------------------------------------------

Time Stamp:         13th Jan 2K25 - 08:49 PM
Commit Message:     279 - Angular Projects - Removed Track It - Moving it to its own repository

Quick Summary:

1. Removed Track It project from the Angular Multi Projects workspace.
2. Moving Track It to its own repository for better organization and management.
    URL: https://www.github.com/kohthecodemaster/trackit

----------------------------------------------------------------------------------------------------

Time Stamp:         11th Jan 2K25 - 02:10 PM
Commit Message:     278 - Angular Projects - Track It - Added Sidebar Component for Navigation

Quick Summary:

1. Project Setup for Track It - A Task Management Application.
2. Added Sidebar Component for navigation and task management.

----------------------------------------------------------------------------------------------------

Time Stamp:         9th Jan 2K25 - 09:14 AM
Commit Message:     277 - Angular Projects - Blinkit - Added Product Card Component - Updated Product Model & Service

Quick Summary:

1. Added Product Card Component to display product details in a card format.
2. Updated the Product Model to include `quantity` and `subTotalPrice` fields.

----------------------------------------------------------------------------------------------------

Time Stamp:         9th Jan 2K25 - 07:47 AM
Commit Message:     276 - Angular Projects - Blinkit - Added Product Grid Component - Fixed Products List in Products Service

Quick Summary:

1. Added Product Grid Component to display products in a grid layout.
2. Fixed the Products List in the Products Service to include product details.

----------------------------------------------------------------------------------------------------

Time Stamp:         9th Jan 2K25 - 07:25 AM
Commit Message:     275 - Angular Projects - Blinkit - Code Cleanup - Refactored Components & Services for Better Readability

Quick Summary:

1. Refactored components and services in the Blinkit project for better readability and maintainability.
2. Cleaned up the codebase by removing unnecessary variables and methods to improve code quality and structure.

----------------------------------------------------------------------------------------------------

Time Stamp:         5th Jan 2K25 - 11:44 AM
Commit Message:     274 - Angular Projects - Blinkit - Skeleton Design - Routing Setup & Re-designed Category List Bar / Sub Category Sidebar Components

Quick Summary:

1. Added routing setup for the Shopping component.
2. Re-designed the Category List Bar and Sub Category Sidebar components for better active category highlighting and sub-category display.

----------------------------------------------------------------------------------------------------

Time Stamp:         5th Jan 2K25 - 08:11 AM
Commit Message:     273 - Angular Projects - Blinkit - Skeleton Design - Shopping, Category List Bar & Sub Category Sidebar Components Added

Quick Summary:

1. Added the skeleton structure for the Shopping component with the Category List Bar and Sub Category Sidebar.

----------------------------------------------------------------------------------------------------

Time Stamp:         3rd Jan 2K25 - 11:55 AM
Commit Message:     272 - Angular Projects - Blinkit - Skeleton Design - Useful-Links-Categories & Footer Component

Quick Summary:

1. Designed the skeleton structure for the Useful Links & Categories component as well as the Footer component.

----------------------------------------------------------------------------------------------------

Time Stamp:         3rd Jan 2K25 - 10:54 AM
Commit Message:     271 - Angular Projects - Blinkit - Skeleton Design - Product Slider Component

Quick Summary:

1. Designed the skeleton structure for the Product Slider component of the Blinkit website.
2. Added ProductSliderService & CategoryGridService to fetch category & product data.

----------------------------------------------------------------------------------------------------

Time Stamp:         3rd Jan 2K25 - 08:17 AM
Commit Message:     270 - Angular Projects - Blinkit - Skeleton Design - Category Grid Component

Quick Summary:

1. Designed the skeleton structure for the Category Grid component of the Blinkit website.
2. Added placeholders for the category cards.

----------------------------------------------------------------------------------------------------

Time Stamp:         2nd Jan 2K25 - 08:22 AM
Commit Message:     269 - Angular Projects - Blinkit - Poster Component Skeleton Design

Quick Summary:

1. Designed the skeleton structure for the Poster component of the Blinkit website.
2. Added placeholders for the 4 posters.

----------------------------------------------------------------------------------------------------

Time Stamp:         2nd Jan 2K25 - 07:43 AM
Commit Message:     268 - Angular Projects - Blinkit - Nav Bar Component Design Refinements - Assets Folder Configuration

Quick Summary:

1. Refactored the Navigation Bar component for the Blinkit website.
2. Configured `assets` folder for storing images and icons.
3. Improved the design and layout of the Nav Bar with better logo alignment and spacing.

----------------------------------------------------------------------------------------------------

Time Stamp:         31st Dec 2K24 - 01:59 PM
Commit Message:     267 - Quick Hands-on - Test Background Process API - Fetch Data & Display

Quick Summary:

1. Added a quick hands-on project to test the Background Process API.
2. Fetched data from a mock API and displayed it on the screen.

----------------------------------------------------------------------------------------------------

Time Stamp:         30th Dec 2K24 - 07:51 AM
Commit Message:     266 - Angular Projects - Blinkit - Nav Bar Component Design

Quick Summary:

1. Designed the Navigation Bar for the Blinkit website.
2. Added the Logo, Address, Search bar, Account, and Cart.

----------------------------------------------------------------------------------------------------

Time Stamp:         30th Dec 2K24 - 06:43 AM
Commit Message:     265 - Angular Projects - Blinkit - Project Setup

Quick Summary:

1. Created a new Angular project 'blinkit' for the clone of Blinkit website.
2. Added initial project setup with tailwind CSS and basic components.

----------------------------------------------------------------------------------------------------

Time Stamp:         28th Dec 2K24 - 02:00 PM
Commit Message:     264 - Angular Projects - Snake Game - Game Completed & Ready To Play

Quick Summary:

1. Completed the Snake Game with all core functionalities.
2. When the snake size reaches the maximum, the game is over.

----------------------------------------------------------------------------------------------------

Time Stamp:         28th Dec 2K24 - 01:53 PM
Commit Message:     263 - Angular Projects - Snake Game - Added Timer Service

Quick Summary:

1. Added Timer Service to handle the game timer.
2. Implemented the logic to keep ticking the timer every second during the game status is IN_PROGRESS.
3. Based on the Level selected, the timer speed will be adjusted.

----------------------------------------------------------------------------------------------------

Time Stamp:         28th Dec 2K24 - 12:01 PM
Commit Message:     262 - Angular Projects - Snake Game - Added Score Service

Quick Summary:

1. Added Score Service to track the player's score and high score.
2. Implemented the logic to update the score when the snake eats the food.
3. Updated the Scoreboard Component to display the player's score and high score.

----------------------------------------------------------------------------------------------------

Time Stamp:         28th Dec 2K24 - 11:38 AM
Commit Message:     261 - Angular Projects - Snake Game - Added Food Collision Detection

Quick Summary:

1. Added Food Collision Detection to check if the snake has eaten the food.
2. Trigger `refreshFood$` event when the snake eats the food to generate new food on the board.

----------------------------------------------------------------------------------------------------

Time Stamp:         27th Dec 2K24 - 11:06 PM
Commit Message:     260 - Angular Projects - Snake Game - Added Food Service & Updated Game Board Service

Quick Summary:

1. Added Food Service to handle the generation of food on the game board.
2. Updated Game Board Service to render the food on the empty cells of the board.

----------------------------------------------------------------------------------------------------

Time Stamp:         27th Dec 2K24 - 07:15 PM
Commit Message:     259 - Angular Projects - Snake Game - Added Game Over Component, Restart Game Functionality & Prevent Opposite Direction Movement

Quick Summary:

1. Added the Game Over Component to display the game over message.
2. Restart the game when game status is GAME_OVER & user clicks anywhere on the board.
3. Refactored `NOT_STARTED` to `SELECT_LEVEL` for better game flow.
4. Prevent the snake from moving in the opposite direction.

----------------------------------------------------------------------------------------------------

Time Stamp:         27th Dec 2K24 - 05:04 PM
Commit Message:     258 - Angular Projects - Snake Game - Added Snake Movement, Collision Detection & Keyboard Input Handling

File Changes:

1. snake.service.ts
    - File Path: `Projects/angular-multi-projects/projects/snake/src/app/service/snake.service.ts`
    - Change Type: Modified
    - Priority: High
    - Change Summary:
    - Explanation:
        - Added `keyboardInputSubscription` to listen to Key events only when the game is in progress.
        - Modified `listenToKeyboardInputService()` to unsubscribe & stop listening to key events when the `GameStatus` is changed & not 'IN_PROGRESS'.
        - Refactored `moveSnake()` method to handle snake movement based on the direction.
        - Methods Added: `handleKeyboardInputEvent()`, `moveSnakeBody()`, `moveHead()`, `checkCollision()`.

2. game-board.service.ts
    - File Path: `Projects/angular-multi-projects/projects/snake/src/app/service/game-board.service.ts`
    - Change Type: Modified
    - Priority: Medium
    - Change Summary: Refactored ROW_SIZE & COL_SIZE , Added resetBoardCells() method, Render Snake only if not Dead.
    - Explanation:
        - Refactored ROW_SIZE & COL_SIZE to be public static constants.
        - Added `resetBoardCells()` method to reset the board cells to CellState.EMPTY before rendering the snake.
        - Render Snake only if the snake is not Dead to avoid any out of bounds errors.

3. snake.model.ts
    - File Path: `Projects/angular-multi-projects/projects/snake/src/app/shared/model/snake.model.ts`
    - Change Type: Modified
    - Priority: Low
    - Change Summary:
    - Explanation:
        - Added `SnakeDirection.RIGHT` during `initHead()` method.


Summary:
- Modified `snake.service.ts` to handle keyboard input events, snake movement, and collision detection.
- Refactored `game-board.service.ts` to reset board cells and render the snake only if it's not dead.
- Updated `snake.model.ts` to initialize the snake's head direction.

----------------------------------------------------------------------------------------------------

Time Stamp:         27th Dec 2K24 - 12:53 AM
Commit Message:     257 - Angular Projects - Snake Game - Added Components & Service Implementations

Overview:
- Added Multiple Components & Services for the Snake Game.
- Implemented the rendering of the game board and initial position of snake with the head.

Components:
- [Done] Choose Level Component for selecting the game difficulty level.
- [Done] Loading Screen Component for displaying the countdown timer.
- Initialized the Scoreboard Component for tracking the player's score and high score.
- Implemented the Game Board Component for rendering the board grid cells.

Service Implementation:
- Implemented Snake Service for handling the snake's movement and position.
- Implemented Score Service for tracking the player's score and high score.
- Added Keyboard Input Service for listening to arrow key events for snake movement.
- Implemented Game State Service for managing the game status & level.

Enums & Models:
- Added Snake Direction Enum for handling the snake's movement directions.
- Added Level Enum for defining the game difficulty levels.
- Implemented Snake Model for the snake's position and direction.


Summary:
- Added multiple components and services for the Snake Game.
- Implemented the rendering of the game board and initial position of the snake with the head.
- Services handle the snake's movement, score tracking, keyboard input, and game state management.
- Enums and models are used to define directions, levels, and snake properties.

----------------------------------------------------------------------------------------------------

Time Stamp:         26th Dec 2K24 - 06:01 PM
Commit Message:     256 - Angular Projects - Tic Tac Toe Game - System Design - v2

Quick Summary:
- Refactored Tic Tac Toe Game for better readability and consistency.
- Prepared New System Design document (v2) for Tic-Tac-Toe Game.
- Readable Design Doc includes List of Entities, Components, Services & Models for the game.

----------------------------------------------------------------------------------------------------

Time Stamp:         26th Dec 2K24 - 09:45 AM
Commit Message:     255 - Angular Projects - Snake Game - Core Design & Component Hierarchy

Quick Summary:
- Added core design and component hierarchy for the Snake Game in Angular.
- Using Cell Component, CellState Enum for handling the elements of the game board.
- Implemented Game Board Component & GameBoard Service for rendering the game board.

----------------------------------------------------------------------------------------------------

Time Stamp:         25th Dec 2K24 - 12:24 AM
Commit Message:     253 - Angular Projects - Tic Tac Toe Game - System Design - Components & Services

Quick Summary:
- Added System Design document for the Tic Tac Toe game components and services.
- Documented the component hierarchy, interactions, and services for the game.

----------------------------------------------------------------------------------------------------

Time Stamp:         24th Dec 2K24 - 02:02 PM
Commit Message:     252 - Projects - Angular Multi Projects - Tic Tac Toe Game

Quick Summary:
- Created a new Angular project 'angular-multi-projects' for creating multiple Angular projects in a single workspace.
- This workspace will contain multiple Angular projects with separate configurations but shared `node_modules`.
- Added the 'tic-tac-toe' project in this workspace for the Tic Tac Toe game.
- Added another blank project 'arkanoid' for the Arkanoid game.

----------------------------------------------------------------------------------------------------

Time Stamp:         23rd Dec 2K24 - 11:30 PM
Commit Message:     251 - Practice Projects - Tic Tac Toe Game - Angular App Ready

Quick Summary:
- Added Scoreboard & Settings components to the Tic Tac Toe game.
- Implemented clear board, restart game and reset score functionality.
- Added styling for highlighting the turn indicator, winner & winning cells using ngClass and Tailwind CSS.
- Game is now fully functional with player turns, win conditions, and score tracking.

----------------------------------------------------------------------------------------------------

Time Stamp:         23rd Dec 2K24 - 09:47 PM
Commit Message:     250 - Practice Projects - Tic Tac Toe Game - Board & Cell Components - Angular

Quick Summary:
- Added Board & Cell components to represent the Tic Tac Toe game board.
- Implemented dynamic rendering of the game board and cell interactions.
- Updated the game status messages based on player moves and win conditions.
- Winning combinations are highlighted on the board.

----------------------------------------------------------------------------------------------------

Time Stamp:         23rd Dec 2K24 - 12:09 PM
Commit Message:     249 - Practice Projects - Tic Tac Toe Game - Angular Components & Services

Overview:
- Added Angular components and services to simulate the event-driven behavior of the Tic Tac Toe game.
- Select Player & Game Status messages from dropdowns.
- Update Player details & Game Status messages dynamically via services, event subscriptions, and component interactions.

Files Added:

Components:
1. `TicTacToeGameComponent`
2. `StatusMsgComponent`

Services:
1. `GameStateService`
2. `StatusMsgService`

Other Files:
1. `Player` - Model for Player details
2. `PlayerHelper` - Helper class for Player operations
3. `GameStatus` - Enum for game status values
4. `TicTacToeSymbol` - Enum for Tic Tac Toe symbols

Summary:
- Added Angular components and services to simulate the event-driven behavior of the Tic Tac Toe game.
- Implemented the selection of Player & Game Status messages from dropdowns.
- Updated Player details & Game Status messages dynamically via services, event subscriptions, and component interactions.

----------------------------------------------------------------------------------------------------

Time Stamp:         21st Dec 2K24 - 08:07 PM
Commit Message:     248 - Practice Projects - Tic Tac Toe Game - System Design - Phase 1

Files Added:

1. 01-basic-idea.txt
    - File Path: `Projects/Games/TicTacToe/system-design/01-basic-idea.txt`
    - Change Type: New File Added
    - Priority: High
    - Change Summary: Added basic idea of game states & actions for the Tic Tac Toe game.
    - Explanation: Outlined the basic idea of game states & actions for the Tic Tac Toe game system design.

2. 02-component-design.txt
    - File Path: `Projects/Games/TicTacToe/system-design/02-component-design.txt`
    - Change Type: New File Added
    - Priority: High
    - Change Summary: Added component design for the Tic Tac Toe game.
    - Explanation: Created a component design document for the Tic Tac Toe game system design.

Summary:
- Added system design documents for the Tic Tac Toe game, including the basic idea of game states & actions and component design.

----------------------------------------------------------------------------------------------------

Time Stamp:         17th Dec 2K24 - 08:07 PM
Commit Message:     247 - Practice Projects - Tic Tac Toe Game - v2 - Applied Some SOLID Principles & Clean Code

1. Added v2 of the Tic Tac Toe game with improved code structure and readability.
2. Applied SOLID principles and clean code practices to enhance the codebase.

Files Added:
- `Projects/Games/TicTacToe/v2-clean-code/html/index.html`                  -> HTML file for v2 of the game.
- `Projects/Games/TicTacToe/v2-clean-code/css/input.css`                    -> Tailwind CSS input styling.
- `Projects/Games/TicTacToe/v2-clean-code/css/input.css`                    -> Tailwind CSS output styling.
- `Projects/Games/TicTacToe/v2-clean-code/js/app.js`                        -> Updated JavaScript file with improved code structure.
- `Projects/Games/TicTacToe/v2-clean-code/js/game.js`                       -> Game logic implementation with SOLID principles.
- `Projects/Games/TicTacToe/v2-clean-code/js/controller/MainController.js`  -> Main controller for game logic.
- `Projects/Games/TicTacToe/v2-clean-code/js/handler/GameLogicHandler.js`   -> Game logic handler for player moves and win conditions.
- `Projects/Games/TicTacToe/v2-clean-code/js/handler/UIHandler.js`          -> UI handler for updating the game board and player moves.
- `Projects/Games/TicTacToe/v2-clean-code/js/model/Player.js`               -> Player model for storing player details.
- `Projects/Games/TicTacToe/v2-clean-code/js/model/GameBoard.js`            -> Game board model for storing player moves.
- `Projects/Games/TicTacToe/v2-clean-code/js/app.js`                        -> Main App for game initialization.

Summary:
- Added v2 of the Tic Tac Toe game with improved code structure and readability.
- Applied SOLID principles and clean code practices to enhance the codebase.
- Moved the HTML, CSS, and JavaScript files for the v1 version of the game inside the `v1-monolithic` directory.
- Created a new directory `v2-clean-code` to house the updated version of the game with improved code quality.

----------------------------------------------------------------------------------------------------

Time Stamp:         15th Dec 2K24 - 01:56 PM
Commit Message:     246 - Practice Projects - Tic Tac Toe Game - Game Ready to play with Basic Features

File Changes:

1. app.js
    - File Path: `Projects/Games/TicTacToe/js/app.js`
    - Change Type: Modified
    - Priority: High
    - Change Summary: Game Ready to play with Basic Features
    - Explanation: Game logic implemented for player moves and win conditions. Game ready to play with basic features.

2. index.html
    - File Path: `Projects/Games/TicTacToe/html/index.html`
    - Change Type: Modified
    - Priority: Medium
    - Change Summary: Removed Mode Selection Buttons to Simplify the Game for 2-Player Mode Only.
    - Explanation: Simplified the game by removing the mode selection buttons to focus on the 2-player mode only.

ToDos:
- Highlight the Player after each move, Winner on Scoreboard, and Winning Combination on the Board
- Fixed Restart Button Functionality
- For now, the game is set for 2-player mode only.
- Game is ready to play with basic features.


Summary:
- Added game logic for player moves and win conditions in the Tic Tac Toe game.
- Created a new file app.js to handle the game logic.
- Updated the index.html file to include id attributes for buttons and link the app.js file.
- Added ToDos for future enhancements like highlighting the winner on the scoreboard and board.

----------------------------------------------------------------------------------------------------

Time Stamp:         14th Dec 2K24 - 11:15 PM
Commit Message:     245 - Practice Projects - Tic Tac Toe Game - Added Game Logic for Player Moves & Win Conditions

File Changes:

1. app.js
    - File Path: `Projects/Games/TicTacToe/js/app.js`
    - Change Type: New File Added
    - Priority: High
    - Change Summary: Added game logic for player moves and win conditions.
    - Explanation: Created a new file app.js to handle the game logic for player moves and win conditions in the Tic Tac Toe game.

2. index.html
    - File Path: `Projects/Games/TicTacToe/html/index.html`
    - Change Type: Modified
    - Priority: Medium
    - Change Summary: Added id attributes to buttons and script tag for app.js file.
    - Explanation: Updated the index.html file to include id attributes for buttons and a script tag to link the app.js file for game logic.


ToDos:
- Highlight the Winner on Scoreboard
- Highlight the Player after each move
- Highlight the Winning Combination on the Board


Summary:
- Added game logic for player moves and win conditions in the Tic Tac Toe game.
- Created a new file app.js to handle the game logic.
- Updated the index.html file to include id attributes for buttons and link the app.js file.
- Added ToDos for future enhancements like highlighting the winner on the scoreboard and board.

----------------------------------------------------------------------------------------------------

Time Stamp: 21st Sep 2K24 - 10:14 PM
Commit: #240 - New SMD Series - 'Web Fundamentals - House Analogy' - Section 1-5 Completed, 6 In Queue

Changes:

- File: `Notes/SMD/Web Fundamentals - House Analogy.txt`
- Added New SMD Series - 'Web Fundamentals - House Analogy'.
- Completed Section 1-5:
    - Section 1: What is the Web?
    - Section 2: What is a Website?
    - Section 3: Web Terminology - House Analogy
    - Section 4: Building a House vs Web Development
    - Section 5: The Holy Trinity of Web Dev
- Section 6: HTML - The Foundation of the House - In Queue for Future Content.


Summary:
- Created a new SMD series titled 'Web Fundamentals - House Analogy'.
- Completed Section 1-5 covering various aspects of web development.
- Section 6 on 'HTML - The Foundation of the House' is in the queue for future content.

----------------------------------------------------------------------------------------------------

Time Stamp: 20th Sep 2K24 - 11:41 PM
Commit: #239 - Tailwind CSS - Practice - Tic Tac Toe Game - Added Basic Structure for Game Board

Changes:

- Title: Tic Tac Toe Game - Added Basic Structure for Game Board
- File: `Practice/Angular/base/hello-world/src/app/components/demo-practice/demo-tic-tac-toe/demo-tic-tac-toe.component.html`

- Changes Made:
  - Added the basic structure for the Tic Tac Toe game board using Tailwind CSS classes.
  - Created a 3x3 grid using flexbox to represent the game board.
  - Added Reset button.

Summary:
- Added the basic structure for the Tic Tac Toe game board using Tailwind CSS classes.
- Created a 3x3 grid using flexbox to represent the game board.
- Included a Reset button for restarting the game.

----------------------------------------------------------------------------------------------------

Time Stamp: 16th Sep 2K24 - 09:49 AM
Commit: #238 - Tailwind CSS - Practice - Google Home Page - Added New Components for HTML Fundamentals & Google Home Page

Changes:

- Added a new component `DemoHtmlFundamentals` to encapsulate the HTML fundamentals section.

- Created a new component `DemoGoogleHomePage` to focus on rendering the Google Home Page layout and styles.
    - This component focuses on rendering the Google Home Page layout and styles.
    - Content of `demo-google.component.html` file was moved to this component to make it as a new standalone component.
    - This change was made for separating the Google Home Page content into its own dedicated standalone component.

- Updated `DemoGoogleComponent` Structure - It Now Acts as a Container for `DemoHtmlFundamentals` and `DemoGoogleHomePage` Components:


Summary:
- Added a new component `DemoHtmlFundamentals` to encapsulate the HTML fundamentals section.
- Created a new component `DemoGoogleHomePage` to focus on rendering the Google Home Page layout and styles.
- Moved the content of `demo-google.component.html` to the `demo-google-home-page.component.html` for separation.
- Updated the structure of the `DemoGoogleComponent` to act as a container for `DemoHtmlFundamentals` and `DemoGoogleHomePage` components.

----------------------------------------------------------------------------------------------------

Time Stamp: 13th Sep 2K24 - 09:03 PM
Commit: #237 - Tailwind CSS - Practice - Google Home Page - Updated Navbar & Footer Links with Underline on Hover, Added Standalone Google Home Page with Tailwind CSS

Changes:

- File: `Practice/Angular/base/hello-world/src/app/components/demo-practice/demo-google/demo-google.component.html`
  - Updated Links in the Navbar & Footer sections to include underline on hover.

- Files Path: `Practice/CSS/Tailwind CSS/playground/google-home-page`
  - Added `index.html` file separately for the Google Home Page with Tailwind CSS without Angular.

Summary:
- Updated the Navbar and Footer sections in the `Demo-Google` component to include underlines on hover for links.
- Added an `index.html` file separately for the Google Home Page with Tailwind CSS without Angular for standalone practice.

----------------------------------------------------------------------------------------------------

Time Stamp: 12th Sep 2K24 - 10:16 PM
Commit: #236 - Tailwind CSS - Practice - Google Home Page - Improved Alignment, Search Box Icons, Language Options, Footer Layout

Changes:

- File: `Practice/Angular/base/hello-world/src/app/components/demo-practice/demo-google/demo-google.component.html`
  - Adjusted the height of the main section & footer container for better alignment.
  - Added SVG Icons for Search, Microphone & Lens buttons in the Search Box.
  - Updated the layout of the language options section.
  - Refined the footer layout with consistent text and spacing.

Summary:
- Improved alignment by adjusting the height of the main section and footer container.
- Enhanced the search box with new SVG icons for Search, Microphone, and Lens buttons.
- Updated the language options section layout for better spacing.
- Refined the footer layout to ensure consistent text size and spacing.

----------------------------------------------------------------------------------------------------

Time Stamp: 12th Sep 2K24 - 06:53 PM
Commit: #235 - Tailwind CSS - Practice - Google Home Page - Completed Footer, Updated Main Section - Search Buttons, Pending - Search Box

Changes:

- File: `Practice/Angular/base/hello-world/src/app/components/demo-practice/demo-google/demo-google.component.html`
  - Completed the Footer section using Tailwind CSS classes.
  - Updated the Main Section to include Search Buttons: "Google Search" and "I'm Feeling Lucky".
  - Pending: Design and implementation of the Search Box.

Summary:
- Completed the Footer section in the `Demo-Google` component using Tailwind CSS.
- Updated the Main Section to include Search Buttons.
- The Search Box design and implementation are still pending.

----------------------------------------------------------------------------------------------------

Time Stamp: 12th Sep 2K24 - 04:01 PM
Commit: #234 - Tailwind CSS - Practice - Google Home Page - Added Demo-Google Component - Navbar Completed and HTML Skeleton Added for Main Section & Footer - Added New Section for Zero-width Space Character in Text Wrapping Scenarios

Changes:

- File: `Practice/Angular/base/hello-world/src/app/components/demo-practice/demo-google/demo-google.component.html`
  - Added a new component `Demo-Google` for designing the Google Home Page layout.
  - Completed the Navbar section using Tailwind CSS classes.
  - Added skeleton HTML for the Main Section and Footer, but they still need to be designed using Tailwind CSS.

- File: `Practice/Angular/base/hello-world/src/app/components/demo-practice/demo-box-model/demo-scenarios-text-wrap/demo-scenarios-text-wrap.component.html`
  - Added a new section titled "Case 7 - Concept of Zero-width Space Character".
  - Outlined the effects and incidents visually.
  - Detailed the behavior of the space character ' ' as a break point.
  - Included doubts and questions regarding the behavior of the space character in text wrapping scenarios.
  - Provided a conclusion that "Word1 Word2" is displayed on the first line, and "Word3" is wrapped to the next line.
  - Need to note down the explanation for concept of the zero-width space character in text wrapping scenarios.

Summary:
- Added the `Demo-Google` component to design the Google Home Page layout, with the Navbar completed and skeleton HTML for the Main Section and Footer.
- Added a new section in `demo-scenarios-text-wrap.component.html` to analyze the concept of the zero-width space character, including detailed descriptions and questions about its behavior in text wrapping.

----------------------------------------------------------------------------------------------------

Time Stamp: 10th Sep 2K24 - 11:13 PM
Commit: #233 - SMD Series - 'Web Dev for Absolute Beginners' - Episode 1 - 'Why Learn Web Dev?'

Changes:

- File: `Notes/SMD/Web Dev for Absolute Beginners/01 - Why Learn Web Dev.txt`
  - Added a new episode titled "Episode 1 - Unlocking the Power of Web Development for Absolute Beginners".
  - Included sections on the significance and role of web development in the tech industry.
  - Provided an introduction to web development, its importance, and career opportunities.
  - Detailed the core technologies and frameworks used in web development.
  - Explained the benefits of learning web development, including high demand, high-paying jobs, and remote work opportunities.
  - Added real-world examples of web development transforming industries.
  - Outlined career paths in web development, including front-end, back-end, and full-stack development.
  - Provided a summary of the episode, emphasizing the importance and benefits of web development.

Summary:
- Added Episode 1 to the "Web Dev for Absolute Beginners" series, providing a comprehensive introduction to web development and its significance.
- Included detailed explanations, real-world examples, and career opportunities in web development.

----------------------------------------------------------------------------------------------------

Time Stamp: 7th Sep 2K24 - 12:39 PM
Commit: #232 - CSS Fundamentals - Text Wrapping - Added Detailed Scenarios for understanding default behavior of Unicode Line Breaking Algorithm & `text-wrap: wrap;` CSS Property

Changes:

- File: `demo-scenarios-text-wrap.component.html`
  - Added multiple sections to demonstrate the behavior of `text-wrap: wrap;` CSS property.
  - Included various cases to analyze the default behavior of the Unicode Line Breaking Algorithm:
    - Case 1: Single Word fits within the container.
    - Case 2: Single Word overflowing the container.
    - Case 3: Single Word overflowing the container with a long word.
    - Case 4: Multiple Spaces are Collapsed to Single Space.
    - Case 5: Multiple Words separated by Space.
    - Case 6: Overflow of Long Word starting at the 2nd line.
  - Added detailed descriptions and conclusions for each case to explain the text wrapping behavior.

Summary:
- Added detailed scenarios to demonstrate the behavior of the `text-wrap: wrap;` property in the demo-scenarios-text-wrap Component.
- Analyzed various cases to understand the default behavior of the Unicode Line Breaking Algorithm.
- Provided comprehensive examples and explanations for various text wrapping cases.

----------------------------------------------------------------------------------------------------

Time Stamp: 6th Sep 2K24 - 09:11 PM
Commit: #231 - CSS Fundamentals - Text Wrap - Added New Component for Text Wrapping Behavior

Changes:

- File: demo-scenarios-text-wrap.component.html
    - Added basic scenarios to demonstrate text wrapping behavior in fixed-width containers.

Summary:
- Added basic scenarios to demonstrate text wrapping behavior in fixed-width containers.

----------------------------------------------------------------------------------------------------

Time Stamp: 5th Sep 2K24 - 07:46 PM
Commit: #230 - CSS Fundamentals - White Space - Added Comprehensive Example for 'white-space-collapse' Variants in Demo Scenarios

Changes:

- File: `demo-scenarios-white-space-collapse.component.html`
  - Added a new section titled "Comprehensive Example - Exploring White Space Collapse Variants".
  - Demonstrated the behavior of various `white-space-collapse` properties with different cases.
  - Included a warning that `white-space-collapse: preserve-*;` properties are illustrative and recommended using `white-space: pre` or `pre-wrap` for supported behavior.

  - 1. `white-space-collapse: collapse;`
      - Case 1: Spaces & Tabs - Collapse all spaces & tabs.
      - Case 2: Space & Tabs Across Inline Elements - Collapse spaces & tabs across inline elements.
      - Case 3: Line Breaks - Collapse all line breaks.
      - Case 4: Multiple Line Breaks - Collapse multiple line breaks along with spaces and tabs.
      - Case 5: Leading/Trailing Spaces - Collapse leading and trailing spaces.

  - 2. `white-space-collapse: preserve;`
      - Case 1: Spaces & Tabs - Preserve all spaces & tabs.
      - Case 2: Space & Tabs Across Inline Elements - Preserve spaces & tabs across inline elements.
      - Case 3: Line Breaks - Preserve all line breaks.
      - Case 4: Multiple Line Breaks - Preserve multiple line breaks along with spaces and tabs.
      - Case 5: Leading/Trailing Spaces - Preserve leading and trailing spaces.

  - 3. `white-space-collapse: preserve-breaks;`
      - Case 1: Spaces & Tabs - Collapse spaces, convert tabs to spaces.
      - Case 2: Space & Tabs Across Inline Elements - Collapse spaces & tabs across inline elements.
      - Case 3: Line Breaks - Preserve all line breaks.
      - Case 4: Multiple Line Breaks - Preserve multiple line breaks but collapse spaces and tabs.
      - Case 5: Leading/Trailing Spaces - Remove leading and trailing spaces.

  - 4. `white-space-collapse: preserve-spaces;`
      - Case 1: Spaces & Tabs - Preserve spaces, convert tabs to spaces.
      - Case 2: Space & Tabs Across Inline Elements - Preserve spaces & tabs across inline elements.
      - Case 3: Line Breaks - Collapse line breaks into a single space.
      - Case 4: Multiple Line Breaks - Collapse multiple line breaks but preserve spaces and tabs.
      - Case 5: Leading/Trailing Spaces - Preserve leading and trailing spaces.

  - 5. `white-space-collapse: break-spaces;`
      - Case 1: Spaces & Tabs - Preserve spaces, convert tabs to spaces.
      - Case 2: Space & Tabs Across Inline Elements - Preserve spaces & tabs across inline elements.
      - Case 3: Line Breaks - Collapse line breaks into a single space.
      - Case 4: Multiple Line Breaks - Collapse multiple line breaks along with spaces and tabs.
      - Case 5: Leading/Trailing Spaces - Preserve leading and trailing spaces.

Summary:
- Added a comprehensive example to demonstrate the behavior of various `white-space-collapse` properties in the demo-scenarios-white-space-collapse Component.
- Provided detailed explanations and practical use cases for each `white-space-collapse` variant.
- Included a warning that `white-space-collapse: preserve-*;` properties are illustrative and recommended using `white-space: pre` or `pre-wrap` for supported behavior.

----------------------------------------------------------------------------------------------------

Time Stamp: 3rd Sep 2K24 - 09:17 PM
Commit: #229 - CSS Fundamentals - White Space - Added Comprehensive Example for 'white-space-collapse: preserve;' Property in Demo Scenarios

Changes:

- File: `demo-scenarios-white-space-collapse.component.html`
  - Added a new section titled "Comprehensive Example - Understanding the Behavior of White Space Preserve CSS Property".
  - Included a container box with 400x400 px dimensions and a text box with 8px border and padding.
  - Demonstrated the behavior of `white-space-collapse: preserve;` with various cases:
    - Case 1: Tabs - Preserve all tabs.
    - Case 2: Line Breaks - Preserve line breaks.
    - Case 3: Spaces - Preserve multiple spaces.
    - Case 4: Leading/Trailing Spaces - Preserve leading and trailing spaces.
    - Case 5: Sequence of Spaces - Preserve sequence of spaces in the middle of text.
    - Case 6: Space Across Inline Elements - Preserve spaces across inline elements.
    - Case 7: Uniform Text Appearance - Maintain uniform text appearance with preserved formatting.
  - Added an explanation section detailing the behavior and practical use cases of `white-space-collapse: preserve;`.
  - Included a Warning that `white-space-collapse: preserve;` is not a standard CSS property and should use `white-space: pre;` for similar behavior.

Summary:
- Added a comprehensive example to demonstrate the behavior of the `white-space-collapse: preserve;` property in the demo-scenarios-white-space-collapse Component.
- Provided detailed explanations and practical use cases for preserving whitespace in text content.
- Included a Warning that `white-space-collapse: preserve;` is not a standard CSS property and should use `white-space: pre;` for similar behavior.

----------------------------------------------------------------------------------------------------

Time Stamp: 3rd Sep 2K24 - 07:18 PM
Commit: #228 - CSS Fundamentals - White Space - Added New Cases for 'white-space-collapse' Property in Demo Scenarios

Changes:

- File: `demo-scenarios-white-space-collapse.component.html`
  - Changed the title from "Random Scenarios for Understanding the Layout Behavior" to "Demo Scenarios - White Space Collapse CSS Property".
  - Updated the Scenario Title from "Scenario 1 - Understanding the Default Behavior of White Space Collapse CSS Property" to "Default Behavior of White Space Collapse CSS Property".
  - Commented out the sections for "Scenario X - Empty Text Box Width Calculations" and "Scenario Y - Text Overflow due to No Word Break".
  - Added new scenarios to demonstrate the behavior of the `white-space-collapse` CSS property:
    - Case 1: Tabs: All tabs are converted to a single space.
    - Case 2: Line Breaks: All line breaks are converted to a single space.
    - Case 3: Spaces: Multiple spaces are reduced to one.
    - Case 4: Leading / Trailing Spaces: Leading and trailing spaces are removed.
    - Case 5: Sequence of Spaces in the Middle: Spaces in the middle of an element are collapsed into a single space.
    - Case 6: Spaces Across Inline Elements: Spaces across inline elements are collapsed into a single space.
    - Case 7: Uniform Text Display: Text content is displayed uniformly, in a single line.

Summary:
- Added new cases to demonstrate the behavior of the `white-space-collapse` CSS property in the demo-scenarios-white-space-collapse Component.
- Updated the title and scenario descriptions for clarity and focus on the white space collapse scenarios.
- Commented out sections that are not relevant to the current focus on white space collapse scenarios.

----------------------------------------------------------------------------------------------------

Time Stamp: 3rd Sep 2K24 - 03:32 PM
Commit: #227 - CSS Fundamentals - White Space - Exploring 'white-space-collapse' & 'text-overflow' Properties in CSS

Changes:

File: HTML, CSS & TS files for `demo-scenarios-white-space-collapse` Component
  - Added a new component to explore the 'white-space-collapse' property in CSS.
  - Included the default scenario to demonstrate the impact of 'white-space-collapse' on text content.

File: HTML, CSS & TS files for `demo-scenarios-text-overflow` Component
  - Created a new component to experiment with the 'text-overflow' property in CSS.
    - Added a scenario to illustrate the behavior of 'text-overflow' with default value.

File: `03 - SMD - CSS - Text Overflow.txt`
  - Updated the document to include 'Typography Considerations' in Summary Section.

Summary:
- Introduced a new component `demo-scenarios-white-space-collapse` to explore the 'white-space-collapse' property in CSS.
- Created a new component `demo-scenarios-text-overflow` to experiment with the 'text-overflow' property in CSS.
- Included default scenarios to demonstrate the impact of these properties on text content.
- Updated the SMD on 'Text Overflow' to include 'Typography Considerations' in the Summary Section.

----------------------------------------------------------------------------------------------------
Time Stamp: 1st Sep 2K24 - 10:45 AM
Commit: #226 - Exploring 'text-overflow' property, Container Overflow, and Neighboring Elements through Detailed Examples

Changes:

File: `Trackers/To-Do-Action-Items.txt`
  - Added new task: Exploring 'text-overflow' property, Container Overflow, and Neighboring Elements through Detailed Examples.
  - Detailed action items for examining the below scenarios:
    - Examine scenarios of the `text-overflow` property in CSS.
    - Explore causes of container overflow using 'overflow' property in CSS.
    - Investigate scenarios of impacting neighboring elements due to text & container overflow.
  - New Task to Document Simplified Guides For Absolute Beginners.
    - Document simplified guides for beginners on managing container overflow, text overflow, and neighboring elements.
    - Summarize key points and best practices for handling overflow scenarios effectively.

Summary:
- Added a new task to `Trackers/To-Do-Action-Items.txt` for exploring 'text-overflow' property, container overflow, and neighboring elements through detailed examples.
- Included detailed action items for examining various scenarios and causes of overflow in CSS layouts.

----------------------------------------------------------------------------------------------------

Time Stamp: 30th Aug 2K24 - 05:11 PM
Commit: #225 - SMD - Deep Dive into Overflow Property in CSS - Enhancements

Changes:

- File: `Notes/SMD/SMD - CSS/02 - SMD - Deep Dive into Overflow Property in CSS.txt`
  - Updated Table of Contents to include new sections and subsections.
  - Added detailed explanations for the `overflow` property, including syntax and values.
  - Introduced a real-world analogy of window blinds to explain the concept of `overflow`.

- File: `Notes/SMD/SMD - CSS/03 - SMD - Text Content Overflow.txt`
  - New Sub-section Added - '2.4 Text Overflow in Flexbox' to explore text overflow scenarios in Flexbox layouts.
  - New Section Added - 'Section 7: Typography and Text Overflow' for typography considerations in text overflow scenarios.

- File: `unsorted/git-diff-files/Commit#224/git-diff-224-commit-28-Aug-2K24-02-30-pm.diff`
  - Renamed to `unsorted/git-diff-files/Commit#224/git-diff-224-commit-30-Aug-2K24-02-30-pm.diff`.

- File: `unsorted/git-diff-files/git-diff-225-commit-30-Aug-2K24-05-11-pm.diff`
  - Added new git diff file for commit #225.

Summary:
- Enhanced the `Deep Dive into Overflow Property in CSS` document with including syntax and values along with a real-world analogy of window blinds.
- Improved the `Text Content Overflow` document by adding new sections on Flexbox and typography-related overflow issues.
- Renamed the git diff file for commit #224 to reflect the correct timestamp.
- Added a new git diff file to track changes made in commit #225.

----------------------------------------------------------------------------------------------------

Time Stamp: 28th Aug 2K24 - 02:30 PM
Commit: #224 - SMD - Text Content Overflow in CSS Layouts - Conceptual Understanding

Changes:

- File: `Notes/SMD/SMD - CSS/03 - SMD - Text Content Overflow.txt`
  - Added new file with detailed content on text content overflow in CSS layouts.
  - Included sections on introduction, root causes, impact, neighboring elements, box model role, special mentions from books, and summary.

- File: `Notes/SMD/SMD - CSS/01 - SMD - Child Container Overflow.txt`
  - Updated Table of Contents formatting for better readability.
  - Removed Section 6: Conclusion.
  - Renamed Section 7: Summary to Section 6: Summary.

- File: `Trackers/To-Do-Action-Items.txt`
  - Rephrased and updated the action items related to text content overflow in CSS layouts.

- File: `unsorted/git-diff-files/Commit#224/git-diff-224-commit-28-Aug-2K24-02-26-pm.diff`
  - Added new git diff file for commit #224.

Summary:
- Introduced a new SMD - Text Content Overflow - Comprehensive Details with Conceptual Understanding.
- Improved readability of the Table of Contents in '01 - SMD - Child Container Overflow'.
- Rephrased action items in To-Do-Action-Items.txt to provide clearer guidance on handling text content overflow.
- Added a new git diff file to track changes made in commit #224.

----------------------------------------------------------------------------------------------------

Time Stamp: 28th Aug 2K24 - 10:17 PM
Commit: #223 - SMD Refactoring - For Refinement of SMDs added Placeholders & Updated To-Do Action Items

Changes:

- File: `Notes/SMD/SMD - CSS/01 - SMD - Child Container Overflow.txt`
  - Added a new subsection `2.3 Visual Breakdown` to provide a visual explanation of overflow scenarios.
  - Updated Section 4 to explore other possibilities of child container overflow, including overflow with height and combination of width & height overflow.
  - Renamed Section 5 to `Overflow Handling Strategies and Best Practices` and added new strategies for handling overflow.

- File: `Notes/SMD/SMD - CSS/02 - SMD - Deep Dive into Overflow Property in CSS.txt`
  - Updated Section 4 to `Exploring Use-Cases of Overflow Property` and added placeholders for various overflow property use-cases.
  - Added new subsections for different overflow property values and their impact on child container overflow.

- File: `Trackers/Backlog.txt`
  - Updated the backlog to include new action items and detailed descriptions for future reference.
  - Added new sections for exploring `border-box` vs `content-box` and `clearfix` in CSS, and handling overflow with CSS properties.

- File: `Trackers/To-Do-Action-Items.txt`
  - Updated the To-Do action items to reflect the latest changes and added new tasks for handling text content overflow, impact on neighboring elements, and identifying root causes of child container overflow.

---

Summary:
- Refined text content in `DemoPlayWithWidthAndHeightComponent` template to offer clearer and more detailed explanations.
- Enhanced Section 1's explanations to better elucidate the effects of excessive padding on content width and height for improved comprehension.
- Extended `Notes/SMD/SMD - CSS/01 - SMD - Child Container Overflow.txt` to include visual breakdowns and additional overflow scenarios.
- Updated `Notes/SMD/SMD - CSS/02 - SMD - Deep Dive into Overflow Property in CSS.txt` to explore various use-cases of the overflow property.
- Updated backlog and To-Do action items to reflect new tasks and future reference items.

----------------------------------------------------------------------------------------------------

Time Stamp: 28th Aug 2K24 - 02:25 PM
Commit: #222 - [SMD] CSS Fundamentals - Box Model - Child Content Overflow & Deep Dive into Overflow Property in CSS Layouts

Changes:
- Files: `01 - SMD - Child Container Overflow.txt`, `02 - SMD - Deep Dive into Overflow Property in CSS.txt`

Introduction and Deep Dive into Overflow Concepts:

Detailed Examination of Child Content Overflow:
- File: `01 - SMD - Child Container Overflow.txt`
  - Added detailed explanations and scenarios demonstrating how child content can overflow its container.
  - Included various examples to illustrate the effects of different sizes and padding on overflow behavior.

Deep Dive into the Overflow Property in CSS:
- File: `02 - SMD - Deep Dive into Overflow Property in CSS.txt`
  - Comprehensive examination of the `overflow` property and its values (`visible`, `hidden`, `scroll`, `auto`).
  - Detailed descriptions and examples to show how each overflow value impacts content rendering within a container.
  - Explored different use cases and best practices for managing overflow in CSS layouts.

---

Summary:
- Added in-depth content related to child container overflow and the overflow property in CSS to SMD files.
- Provided thorough explanations and examples to help understand how child content can overflow its container and how to manage overflow properties effectively.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 27th Aug 2K24 - 08:27 PM
Commit: #221 - CSS Fundamentals - Box Model - Basic Restructure before Diving Deep into Concept Understanding

Changes:
- File: `demo-play-with-width-and-height.component.html`

Basic Restructure Before Diving Deep into Concept Understanding:

Enhanced Initial Structure:
- Added more scenarios to `DemoPlayWithWidthAndHeightComponent` for basic interaction before deeper conceptual dives.

Section: Basic Scenarios for Understanding:
- Scenario 4: Overflow Case - Text Box Exceeds Container Width & Height
- Scenario 5: Impact of Padding Leading to Overflow
- Scenario 6: Placeholder for Future Use

Section: More Random Scenarios to Understand the Layout Behavior:
- Added a variety of box scenarios to align with the initial understanding.
- Detailed explanations added to illustrate overflow and alignment issues caused by boxes exceeding their container dimensions.

---

Summary:
- Basic restructure in `DemoPlayWithWidthAndHeightComponent` to facilitate initial exploration and understanding of layout behaviors.
- Added detailed explanations and placeholder for future scenarios.
- Enhanced initial setup to provide a foundation before diving deeper into concept understanding.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 27th Aug 2K24 - 05:18 PM
Commit: #220 - CSS Fundamentals - Box Model - Improved Arrangement of Scenarios for Layout Behavior Understanding

Changes:
- File: `demo-box-model.component.html`, `demo-play-with-width-and-height.component.html`

Clean Arrangement of Scenarios for Conceptual Understanding of Layout Behavior.

Enhanced Arrangement and Clarity in Explanations:
- Organized scenarios within the `DemoPlayWithWidthAndHeightComponent` for clearer understanding.
- Temporarily commented out `DemoConceptClarityComponent` for focused demonstrations.

Section: Scenarios for Conceptual Understanding of Layout Behavior:
- Scenario 1: Long Text Content Overflowing the Container's Height
  - Container Box with 200x200 px dimensions and 16px padding.
  - Text Box with no fixed dimensions and no padding.
  - Scenario explanation provided for text content overflowing container height.
  - Added 3 Doubtful Points for further clarification.

- Scenario 2: Text Box Exceeding Container Width
  - Container Box with 200x200 px dimensions and 16px padding.
  - Text Box with 300x100 px dimensions and no padding.

- Scenario 3: Text Box Exceeding Container Height
  - Container Box with 200x200 px dimensions and 16px padding.
  - Text Box with 100x300 px dimensions and no padding.

- Scenario 4: Placeholder for Future Use
  - Placeholder section added for future scenarios to be detailed later.

---

Summary:
- Arranged scenarios within `DemoPlayWithWidthAndHeightComponent` to provide a structured and clear understanding of layout behaviors.
- Added explanations to each scenario to aid in conceptual comprehension.
- Temporarily commented out `DemoConceptClarityComponent` for a focused demonstration setup.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 27th Aug 2K24 - 03:30 PM
Commit: #219 - CSS Fundamentals - Box Model - Practice - Added New Component Demo-Concept-Clarity & Refactored Demo-Play-With-Width-And-Height

Changes:
- Files: `demo-concept-clarity.component.html`, `demo-play-with-width-and-height.component.html`

Added New Component for Conceptual Clarity and Refactored Existing Component:

Introduced `demo-concept-clarity` Component:
- Created a new component to focus on conceptual clarity around layout behaviors and CSS principles.

Refactored `demo-play-with-width-and-height` Component:
- Restructured to include distinct scenarios for better conceptual understanding of layout behavior.
- Organized content into clearer sections to illustrate different aspects of width and height properties.

---

Summary:
- Added `DemoConceptClarityComponent` to provide focused insights and explanations on CSS concepts.
- Refactored `DemoPlayWithWidthAndHeightComponent` to organize scenarios for improved conceptual understanding of how width and height properties affect layout.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 27th Aug 2K24 - 12:26 PM
Commit: #218 - CSS Fundamentals - Box Model - Practice - Refinement of Text Explanations in `Section 1 - Impact of Excessive Padding`

Changes:
- File: `demo-play-with-width-and-height.component.html`

Refined Text Content for Section Demonstrating Impact of Excessive Padding:

Enhanced Explanation for Better Understanding:
- Refined the explanatory text within Section 1 to provide clearer insights into the impact of excessive padding on content dimensions.

Section 1: Impact of Excessive Padding on Content Width and Height:
- Improved textual explanation to:
  - Clarify the box model behavior with large padding values.
  - Describe parent-child overflow scenarios in more detail.
  - Elaborate on the reduction in content area with better descriptions.
  - Provide more precise details on content displacement issues.

---

Summary:
- Refined text content in `DemoPlayWithWidthAndHeightComponent` template to offer clearer and more detailed explanations.
- Enhanced Section 1's explanations to better elucidate the effects of excessive padding on content width and height for improved comprehension.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 26th Aug 2K24 - 11:58 PM
Commit: #217 - CSS Fundamentals - Box Model - Practice - Zero Content Width and Height Due to Excessive Padding

Changes:
- File: `demo-play-with-width-and-height.component.html`

Extended Sections to Demonstrate CSS Box Model and Padding Impact:

Additional Focus on Zero Content Width and Height Due to Excessive Padding:
- Introduced new section to emphasize the impact of excessive padding on width and height.

Section 1: Zero Content Width and Height due to Excessive Padding:
- Added a container box with dimensions 500x500 px.
- Inserted a text box within the container, having 300x300 px dimensions and 200px padding on all sides.
- Detailed explanation included to illustrate:
  - The behavior of the box model with large padding values.
  - Parent-child overflow issues.
  - Reduction in the content area caused by large padding.
  - Displacement of content due to excessive padding.

---

Summary:
- Extended `DemoPlayWithWidthAndHeightComponent` template to further demonstrate and practice CSS box model properties, specifically focusing on how excessive padding affects content dimensions.
- Added new section with detailed explanations and examples to help understand the impact of large padding values on content visibility and layout structure.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 26th Aug 2K24 - 07:40 PM
Commit: #216 - CSS Fundamentals - Box Model - Practice - Initial Structure for demonstrating CSS width and height properties

Changes:
- File: `demo-play-with-width-and-height.component.html`

Established Basic Structure for Demonstrating CSS Width and Height Properties:

Initial Focus on Understanding Width and Height:
- Introduced foundational sections to begin practicing width and height properties.

- Section 1: Basic Configuration of Boxes:
  - Added initial set of boxes with various width and height configurations.
  - Included basic scenarios like padding impact and element overflow as starting points.

- Section 2: Introducing Padding Impact:
  - Added initial containers and text boxes with varying padding to start exploring.

---

Summary:
- Set up the initial structure in `DemoPlayWithWidthAndHeightComponent` template to begin demonstrating and practicing CSS width and height properties.
- Structured layout includes foundational sections focusing on different aspects of element dimensions, such as padding and overflow.
- Further practice and analysis will continue to refine and expand these demonstrations in upcoming sessions.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 25th Aug 2K24 - 11:12 PM
Commit: #215 - Tailwind CSS - Practice - Handling Images - Added new components `DemoBoxModelComponent` and `DemoPlayWithWidthAndHeightComponent`

Changes:

Added New Components for Practicing CSS Properties:

Emphasis on Learning Box Model:
- Structured Layout: Introduced a layout with flexible containers to practice box model properties.

- Box Model Visualization:
  - Created a new component `DemoBoxModelComponent` to demonstrate the box model properties.
  - Added div elements with borders to visualize the box model properties.

- Play with Width and Height:
  - Introduced a new component `DemoPlayWithWidthAndHeightComponent` to practice width and height properties.
  - Included div elements with varying width and height values for experimentation.

---

Summary:
- Introduced new components focusing on practicing CSS properties for the box model emphasizing width and height.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 24th Aug 2K24 - 09:39 PM
Commit: #214 - Tailwind CSS - Practice - Handling Images - Added Demo Handling Images & Containers Component

Changes:
- File: `demo-handling-images-and-containers.component.html`

Added New Component for Practicing CSS Properties:

Emphasis on Learning Image Handling:
- Structured Layout: Introduced a layout with flexible containers to practice image alignment and spacing.

- Image Containers:
  - Added various image containers to demonstrate different CSS properties.
  - Wrapped images with borders to highlight container boundaries.

- Applied consistent styling across the component to enhance visual clarity and practice styling techniques.

---

Summary:
- Introduced a new component focusing on practicing CSS properties for handling images, with structured layout and consistent styling for enhanced learning.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 22nd Aug 2K24 - 03:38 PM
Commit: #213 - Tailwind CSS - Practice - The Forest Kitchen & Bar - Refactor Layout - 6th Section (Gallery) & 7th Section (We are here)

Changes:
- File: `demo-the-forest-kitchen-and-bar.component.html`

Refactored Layout and Styling:

Emphasis on Section 6: Gallery
- Introduced a new internal wrapper container:
  - Added a `div` with class `"m-16 border-2"` to centralize section content.

- Gallery Title Adjustments:
  - Updated the title's container to `"w-fit h-fit mx-auto my-8 text-[#A8A196] text-4xl font-bold text-center border-2 border-red-500"` for better alignment and visualization.

- Gallery Images Container Adjustments:
  - Wrapped the gallery images in a parent `div` with class `"space-y-1 p-0.5 border-2 border-orange-500"` for consistent styling.

- Updates on Section 7: We are here
  - Applied consistent styling and structure.

---

Summary:
- Reorganized Section 6 & 7 with new wrapper containers and adjusting the layout strategies for a more consistent design pattern.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 22nd Aug 2K24 - 02:48 PM
Commit: #211 - Tailwind CSS - Practice - The Forest Kitchen & Bar - Refactor Layout - 4th Section - Image (Left) & Bar Text (Right)

Changes:
- File: `demo-the-forest-kitchen-and-bar.component.html`

Refactored Layout and Styling:

Emphasis on Section 4: Image (Left) & Bar Text (Right)
- Introduced a new internal wrapper container:
  - Added a `div` with class `"w-full h-fit my-8 mx-16 flex items-center border-2"` to centralize content within Section 4.

- Image Container Adjustments:
  - Reduced padding by changing class from `py-20` to `py-10` for the image container.
  - Ensured consistent cyan borders with class `"w-[60%] h-full py-10 border-2 border-cyan-500"`.

- Text Content Container Adjustments:
  - Added a main wrapper `div` for the text content with class `"w-[40%] h-fit bg-[#181A1B] border-2 border-orange-500"`.
  - Nested text content in a `div` with class `"w-[400px] h-fit mx-auto space-y-6 bg-[#181A1B] border-2 border-green-500"`:
    - Ensured structured and vertically spaced layout.
    - Removed redundant `mt-6` from paragraphs for consistent spacing using `space-y-6`.

---

Summary:
- By reorganizing Section 4 with specific wrapper containers and adjusting layout strategies, the project now follows a more maintainable and consistent design pattern.
- The use of varied border colors aids in development and debugging, ensuring clear separation and alignment of various elements.

---

----------------------------------------------------------------------------------------------------

Time Stamp: 22nd Aug 2K24 - 01:02 PM
Commit: #210 - Tailwind CSS - Practice - The Forest Kitchen & Bar - Refactor Layout - 3rd section - Kitchen Text (Left) & Food Image (Right)

Changes:
- File: `demo-the-forest-kitchen-and-bar.component.html`

Refactored Layout and Styling:

Major Emphasis on Section 3: Kitchen Text (Left) & Food Image (Right)
- Introduced a new wrapper container with a white border:
  - Added a `div` with class `"w-fit h-fit mx-auto pb-16 flex flex-col border-2"` to act as the main wrapper and centralize section content.
- Separated kitchen text and food image:
  - Ensured flexbox layout by adding a `div` class `"flex justify-between border-2 border-green-500"` to wrap the text and image containers.

- Kitchen Text Container Adjustments:
  - Wrapped kitchen text within another `div` with class `"max-w-2xl border-2 border-red-500"` to ensure proper structure.
  - Updated the "View Menu" and "Dining Options" buttons:
    - Added `div` flex container with `border-2 border-green-500` wrapping buttons for alignment.
    - Each button styled with class `"border-2 border-pink-500 px-4 py-2 mt-6"` for consistent padding and border.

- Food Image Container Adjustments:
  - Wrapped the image within a `div` class `"flex justify-center lg:mr-0 border-2 border-cyan-500"` to ensure proper flex alignment.
  - Applied `border-2 border-yellow-500` directly to the `<img>` tag for clear image placement.

---

General Updates Across Sections:
- Wrapper Container Implementation:
  - Added a `div` with class `"w-fit h-fit mx-auto pb-16 flex flex-col border-2"` around each section to centralize content and apply styles.

- Standardized Margin and Padding:
  - Refactored hardcoded `px-[60px]` to `px-32` across all sections for consistent padding and responsiveness.

- Border Color Coding for Development Visualization:
  - Applied green borders for containers with multiple elements by adding `border-2 border-green-500`.
  - Applied red borders for text containers using `border-2 border-red-500`.
  - Defined cyan borders for image containers with `border-2 border-cyan-500`.
  - Added yellow borders directly to images using `border-2 border-yellow-500`.
  - Styled buttons with pink borders using `border-2 border-pink-500`.

---

Summary:
- By organizing each section with specific wrapper containers and adjusting the layout and styling strategies, the project now adheres to a more maintainable and consistent design pattern throughout.
- The border color coding helps with development and debugging, ensuring clear separations and alignments of various elements.

---

----------------------------------------------------------------------------------------------------
